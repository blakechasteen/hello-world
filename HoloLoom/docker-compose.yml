version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.14.0
    container_name: hololoom-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/hololoom123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      # Enable security
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      # Logging
      - NEO4J_dbms_logs_query_enabled=true
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: hololoom-qdrant
    ports:
      - "6333:6333"  # HTTP/REST
      - "6334:6334"  # gRPC
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      # Storage settings
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      # Performance
      - QDRANT__SERVICE__MAX_REQUEST_SIZE_MB=32
    volumes:
      - qdrant_storage:/qdrant/storage
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:6333/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: Mem0 PostgreSQL Backend
  postgres:
    image: postgres:16-alpine
    container_name: hololoom-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=hololoom
      - POSTGRES_PASSWORD=hololoom123
      - POSTGRES_DB=mem0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hololoom"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Optional: Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hololoom-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  qdrant_storage:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: hololoom-network
