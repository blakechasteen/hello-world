version: '3.8'

services:
  # Neo4j - Knowledge Graph Backend
  neo4j:
    image: neo4j:5.13
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/promptly123
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2g
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - promptly-network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p promptly123 'RETURN 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant - Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - promptly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Caching (optional, for future)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - promptly-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  neo4j-data:
    driver: local
  neo4j-logs:
    driver: local
  qdrant-data:
    driver: local
  redis-data:
    driver: local

networks:
  promptly-network:
    driver: bridge
